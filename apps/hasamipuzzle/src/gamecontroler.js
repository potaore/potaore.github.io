// Generated by CoffeeScript 1.4.0
(function() {
  var setEditModeControl, setMenuModeControl, setPlayodeControl;

  setPlayodeControl = function(game) {
    var keyEventArray, keyEventArray_withCtrl;
    keyEventArray = [];
    keyEventArray[13] = game.killPlayer;
    keyEventArray[37] = game.movePlayerWalkLeft;
    keyEventArray[38] = game.movePlayerWalkUp;
    keyEventArray[39] = game.movePlayerWalkRight;
    keyEventArray[40] = game.movePlayerWalkDown;
    keyEventArray_withCtrl = [];
    keyEventArray[13] = game.killPlayer;
    keyEventArray_withCtrl[37] = game.movePlayerDashLeft;
    keyEventArray_withCtrl[38] = game.movePlayerDashUp;
    keyEventArray_withCtrl[39] = game.movePlayerDashRight;
    keyEventArray_withCtrl[40] = game.movePlayerDashDown;
    document.onkeydown = function(e) {
      var _name, _name1;
      if (typeof e !== "undefined" && (e != null)) {
        e = window.event;
      }
      if (e.ctrlKey) {
        return typeof keyEventArray_withCtrl[_name = e.keyCode] === "function" ? keyEventArray_withCtrl[_name]() : void 0;
      } else {
        return typeof keyEventArray[_name1 = e.keyCode] === "function" ? keyEventArray[_name1]() : void 0;
      }
    };
    return setTimeout((function() {
      game.update();
      return setTimeout(argmuents.callee, 200);
    }), 200);
  };

  setEditModeControl = function(game, dao) {
    var energydisp, keyEventArray;
    keyEventArray = [];
    keyEventArray[32] = game.changeFloor;
    keyEventArray[13] = game.changeItem;
    keyEventArray[37] = game.moveCursorLeft;
    keyEventArray[38] = game.moveCursorUp;
    keyEventArray[39] = game.moveCursorRight;
    keyEventArray[40] = game.moveCursorDown;
    keyEventArray[71] = game.setGhost;
    keyEventArray[76] = function() {
      var stageData;
      stageData = dao.getStageData();
      return game.loadStageData(stageData);
    };
    keyEventArray[79] = game.outputStageData;
    keyEventArray[80] = function() {
      var stageData;
      stageData = dao.getStageData();
      game.startGame(stageData);
      return setPlayodeControl(game);
    };
    keyEventArray[83] = game.changeStartPoint;
    energydisp = document.getElementById('energydisp').onchange = function() {
      return game.setPlayerEnergy(this.value);
    };
    return document.onkeydown = function(e) {
      var _name;
      if (typeof e !== "undefined" && (e != null)) {
        e = window.event;
      }
      return typeof keyEventArray[_name = e.keyCode] === "function" ? keyEventArray[_name]() : void 0;
    };
  };

  setMenuModeControl = function(game, dao) {
    var menu;
    menu = document.getElementById('menu');
    return document.getElementById('startbutton').onclick = function() {
      if (menu.value === "edit") {
        dao.displayTextArea();
        setEditModeControl(game, dao);
        return game.startEdit();
      } else {
        dao.hydeTextArea();
        setPlayodeControl(game);
        return game.startGame(StageData[parseInt(menu.value)]);
      }
    };
  };

}).call(this);
